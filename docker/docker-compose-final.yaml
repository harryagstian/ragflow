services:
  es01:
    image: elasticsearch:${STACK_VERSION}
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    environment:
      node.name: es01
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      bootstrap.memory_lock: false
      discovery.type: single-node
      xpack.security.enabled: true
      xpack.security.http.ssl.enabled: false
      xpack.security.transport.ssl.enabled: false
      cluster.routing.allocation.disk.watermark.low: 5gb
      cluster.routing.allocation.disk.watermark.high: 3gb
      cluster.routing.allocation.disk.watermark.flood_stage: 2gb
      MYSQL_ROOT_HOST: '%'
      TZ: ${TIMEZONE}
      DOC_ENGINE: ${DOC_ENGINE}
      STACK_VERSION: ${STACK_VERSION}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
      KIBANA_PORT: ${KIBANA_PORT}
      KIBANA_USER: ${KIBANA_USER}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      MEM_LIMIT: ${MEM_LIMIT}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DBNAME: ${MYSQL_DBNAME}
      MYSQL_PORT: ${MYSQL_PORT}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SVR_HTTP_PORT: ${SVR_HTTP_PORT}
      RAGFLOW_IMAGE: ${RAGFLOW_IMAGE}
      TIMEZONE: ${TIMEZONE}
      DOC_BULK_SIZE: ${DOC_BULK_SIZE}
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE}
      REGISTER_ENABLED: ${REGISTER_ENABLED}
      HF_ENDPOINT: ${HF_ENDPOINT}
    mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:9200"]
      interval: 10s
      timeout: 10s
      retries: 120
    restart: on-failure

  mysql:
    image: mysql:8.0.39
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${TIMEZONE}
      DOC_ENGINE: ${DOC_ENGINE}
      STACK_VERSION: ${STACK_VERSION}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_PORT: ${KIBANA_PORT}
      KIBANA_USER: ${KIBANA_USER}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      MEM_LIMIT: ${MEM_LIMIT}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DBNAME: ${MYSQL_DBNAME}
      MYSQL_PORT: ${MYSQL_PORT}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SVR_HTTP_PORT: ${SVR_HTTP_PORT}
      RAGFLOW_IMAGE: ${RAGFLOW_IMAGE}
      TIMEZONE: ${TIMEZONE}
      DOC_BULK_SIZE: ${DOC_BULK_SIZE}
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE}
      REGISTER_ENABLED: ${REGISTER_ENABLED}
      HF_ENDPOINT: ${HF_ENDPOINT}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/data/application/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-p${MYSQL_PASSWORD}"]
      start_period: 60s
      start_interval: 10s
      interval: 10s
      timeout: 10s
      retries: 3
    restart: on-failure

  minio:
    image: minio/minio:RELEASE.2025-06-13T11-33-47Z
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      TZ: ${TIMEZONE}
      DOC_ENGINE: ${DOC_ENGINE}
      STACK_VERSION: ${STACK_VERSION}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_PORT: ${KIBANA_PORT}
      KIBANA_USER: ${KIBANA_USER}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      MEM_LIMIT: ${MEM_LIMIT}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DBNAME: ${MYSQL_DBNAME}
      MYSQL_PORT: ${MYSQL_PORT}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SVR_HTTP_PORT: ${SVR_HTTP_PORT}
      RAGFLOW_IMAGE: ${RAGFLOW_IMAGE}
      TIMEZONE: ${TIMEZONE}
      DOC_BULK_SIZE: ${DOC_BULK_SIZE}
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE}
      REGISTER_ENABLED: ${REGISTER_ENABLED}
      HF_ENDPOINT: ${HF_ENDPOINT}
    volumes:
      - minio_data:/data
    restart: on-failure

  redis:
    # swr.cn-north-4.myhuaweicloud.com/ddn-k8s/docker.io/valkey/valkey:8
    image: valkey/valkey:8
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 128mb --maxmemory-policy allkeys-lru
    environment:
      DOC_ENGINE: ${DOC_ENGINE}
      STACK_VERSION: ${STACK_VERSION}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_PORT: ${KIBANA_PORT}
      KIBANA_USER: ${KIBANA_USER}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      MEM_LIMIT: ${MEM_LIMIT}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DBNAME: ${MYSQL_DBNAME}
      MYSQL_PORT: ${MYSQL_PORT}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SVR_HTTP_PORT: ${SVR_HTTP_PORT}
      RAGFLOW_IMAGE: ${RAGFLOW_IMAGE}
      TIMEZONE: ${TIMEZONE}
      DOC_BULK_SIZE: ${DOC_BULK_SIZE}
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE}
      REGISTER_ENABLED: ${REGISTER_ENABLED}
      HF_ENDPOINT: ${HF_ENDPOINT}
    volumes:
      - redis_data:/data
    restart: on-failure

  ragflow:
    depends_on:
      mysql:
        condition: service_healthy
    image: ${RAGFLOW_IMAGE}
    # Example configuration to set up an MCP server:
    # command:
    #   - --enable-mcpserver
    #   - --mcp-host=0.0.0.0
    #   - --mcp-port=9382
    #   - --mcp-base-url=http://127.0.0.1:9380
    #   - --mcp-script-path=/ragflow/mcp/server/server.py
    #   - --mcp-mode=self-host
    #   - --mcp-host-api-key=ragflow-xxxxxxx
    volumes:
      - ragflow_logs:/ragflow/logs
      - ragflow_history_data_agent:/ragflow/history_data_agent
      - ./nginx/ragflow.conf:/etc/nginx/conf.d/ragflow.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./service_conf.yaml.template:/ragflow/conf/service_conf.yaml.template
      - ./entrypoint.sh:/ragflow/entrypoint.sh
    environment:
      TZ: ${TIMEZONE}
      DOC_ENGINE: ${DOC_ENGINE}
      STACK_VERSION: ${STACK_VERSION}
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      KIBANA_PORT: ${KIBANA_PORT}
      KIBANA_USER: ${KIBANA_USER}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
      MEM_LIMIT: ${MEM_LIMIT}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DBNAME: ${MYSQL_DBNAME}
      MYSQL_PORT: ${MYSQL_PORT}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SVR_HTTP_PORT: ${SVR_HTTP_PORT}
      RAGFLOW_IMAGE: ${RAGFLOW_IMAGE}
      TIMEZONE: ${TIMEZONE}
      DOC_BULK_SIZE: ${DOC_BULK_SIZE}
      EMBEDDING_BATCH_SIZE: ${EMBEDDING_BATCH_SIZE}
      REGISTER_ENABLED: ${REGISTER_ENABLED}
      HF_ENDPOINT: ${HF_ENDPOINT}
    restart: on-failure

volumes:
  esdata01:
    driver: local
  infinity_data:
    driver: local
  mysql_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local
  ragflow_logs:
  ragflow_history_data_agent:
